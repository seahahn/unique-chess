name: Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy_production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Infisical CLI
        uses: infisical/setup-cli@v1
        with:
          version: 'latest'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push webapp Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./workspaces/webapp/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/unique-chess-webapp:production,${{ secrets.DOCKER_USERNAME }}/unique-chess-webapp:${{ github.event.release.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push websocket Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./workspaces/websocket/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/unique-chess-websocket:production,${{ secrets.DOCKER_USERNAME }}/unique-chess-websocket:${{ github.event.release.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Deploy to production server (placeholder)
      - name: Deploy to production server
        run: |
          echo "Deploying to production server"
          echo "This is a placeholder for the actual deployment command"
          # Example of actual deployment using SSH (uncomment when ready):
          # mkdir -p ~/.ssh
          # echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          # chmod 600 ~/.ssh/id_rsa
          # ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_IP }} >> ~/.ssh/known_hosts
          # ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} "cd /path/to/deployment && docker-compose pull && docker-compose up -d"