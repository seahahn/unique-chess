version: '3.8'

services:
  # SolidStart Web Application
  webapp:
    build:
      context: .
      dockerfile: workspaces/webapp/Dockerfile
    container_name: unique-chess-webapp-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - unique-chess-network

  # WebSocket Server
  websocket:
    build:
      context: .
      dockerfile: workspaces/websocket/Dockerfile
    container_name: unique-chess-websocket-prod
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - unique-chess-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: unique-chess-postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: unique_chess
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - unique-chess-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: unique-chess-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
    networks:
      - unique-chess-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: unique-chess-minio-prod
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - unique-chess-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: unique-chess-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - webapp
      - websocket
      - minio
    restart: always
    networks:
      - unique-chess-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  unique-chess-network:
    driver: bridge